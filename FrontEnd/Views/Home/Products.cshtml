@model IEnumerable<FrontEnd.Models.Products>

@{
    ViewBag.Title = "Products";
}

<div class="container">
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Order</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="text-danger" id="testGuid"> </div>
                    <div class="text-danger" id="testName"> </div>
                    <div class="text-danger" id="testDisc"> </div>
                    <div class="text-danger" id="testCoun"> </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="Buy()" >Buy</button>
                </div>
            </div>
        </div>
    </div>
    <h2>@ViewBag.Title.</h2>

    <div class="row">
        <div class="col-md-12">
            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-4" style="width: 360px; padding: 10px 10px 10px 10px">
                        <img src="https://semantic-ui.com/images/wireframe/image.png" alt="Alternate Text" width="340" height="280" />
                        <div class="text-primary" id="name_@Html.DisplayFor(modelItem => item.Id_Product)" value="@Html.DisplayFor(modelItem => item.Name)">Name : @Html.DisplayFor(modelItem => item.Name)</div>
                        <div class="text-danger"  id="discription_@Html.DisplayFor(modelItem => item.Id_Product)" value="@Html.DisplayFor(modelItem => item.Description)">Discription : @Html.DisplayFor(modelItem => item.Description)</div>
                        <div class="btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with button groups">
                            <div class="btn-group" role="group" aria-label="First group">
                                <button type="button" class="btn btn-secondary" onclick="discCount('@Html.DisplayFor(modelItem => item.Id_Product)')">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-patch-minus" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M5.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H6a.5.5 0 0 1-.5-.5z" />
                                        <path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z" />
                                    </svg>
                                </button>
                                <input type="button" class="btn btn-secondary" id="@Html.DisplayFor(modelItem => item.Id_Product)" value="1" />
                                <button type="button" class="btn btn-secondary" onclick="incrCount('@Html.DisplayFor(modelItem => item.Id_Product)')">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z" />
                                        <path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z" />
                                    </svg>
                                </button>
                            </div>
                            <div class="input-group" style="float: right">
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" value="@Html.DisplayFor(modelItem => item.Id_Product)" onclick="modalInfo(this)">
                                    Buy
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function modalInfo(ev) {
        document.getElementById('testGuid').innerHTML = "Id : " + ev.value;
        document.getElementById('testCoun').innerHTML = "Count : " + new Number(document.getElementById(ev.value).value);
        document.getElementById('testName').innerHTML = "Name : " + document.getElementById('name_' + ev.value).getAttribute('value');
        document.getElementById('testDisc').innerHTML = "Discription : " + document.getElementById('discription_' + ev.value).getAttribute('value');
    }

    function discCount(ev) {
        var number = new Number(document.getElementById(ev).value);
        if (number > 1)
            document.getElementById(ev).value = number - 1;
    }

    function incrCount(ev) {
        var number = new Number(document.getElementById(ev).value);
        if (number < 99)
            document.getElementById(ev).value = number + 1;
    }

    async function Buy() {
        if (localStorage.getItem("id_User") != null) {
            var data = {
                Count: Number(document.getElementById('testCoun').innerHTML.substr(8)),
                UsersId: localStorage.getItem("id_User"),
                ProductsId: document.getElementById('testGuid').innerHTML.substr(5)
            }
            console.log(data, null, 2)

            const url = 'https://localhost:5001/orders/addorders';

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                const json = await response.json();
                console.log('Успех:', JSON.stringify(json));
                alert("Order made");
            } catch (error) {
                console.error('Ошибка:', error);
            }
        } else {
            alert("Need Authorization");
        }
    }
</script>